// This has been generated with https://nickcoutsos.github.io/keymap-editor/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc_combo {
            timeout-ms = <20>;
            bindings = <&kp ESC>;
            key-positions = <19 20>;
            layers = <0 4>;
        };
    };

    macros {
        win_bt: win_bt {
            label = "win_bt";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to2>,
                <&macro_tap>,
                <&bt BT_SEL MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to 0>;
        };

        mac_bt: mac_bt {
            label = "mac_bt";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to2>,
                <&macro_tap>,
                <&bt BT_SEL MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to 4>;
        };
    };

    behaviors {
        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        lst: lshift_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LSHIFT_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <9 8 6 7 18 31 20 19 10 22 34 32 21 30 33 39 40 41>;
        };

        rst: rshift_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RSHIFT_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <2 1 14 25 13 26 4 15 27 16 3 28 29 5 17 36 37 38>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            retro-tap;
            hold-trigger-key-positions = <39 40 41 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            retro-tap;
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&trans  &kp Q        &kp W            &kp E         &kp R            &kp T        &kp Y      &kp U         &kp I         &kp O            &kp P           &trans
&trans  &hml LGUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LSHFT F     &kp G        &kp H      &hmr RSHFT J  &hmr RCTRL K  &hmr LEFT_ALT L  &hmr LGUI SEMI  &trans
&trans  &kp Z        &kp X            &kp C         &kp V            &kp B        &kp N      &kp M         &kp COMMA     &kp DOT          &kp FSLH        &trans
                                      &caps_word    &sm LCTRL ENTER  &kp SPACE    &lt 1 TAB  &mo 2         &bspc_del
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp EXCL  &kp LS(N2)  &kp SQT   &kp EQUAL        &kp UNDER    &kp GRAVE   &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
&trans  &kp LBRC  &kp LPAR    &kp RPAR  &kp RIGHT_BRACE  &kp STAR     &kp COLON   &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &kp LBKT  &kp MINUS   &kp PLUS  &kp RBKT         &kp AMPS     &kp TILDE2  &kp PIPE2  &kp COMMA  &kp DOT    &kp NUBS   &trans
                              &trans    &trans           &trans       &trans      &trans     &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp EXCL  &kp DQT    &kp NUHS  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTERISK  &kp LPAR  &kp RPAR  &trans
&trans  &kp N1    &kp N2     &kp N3    &kp N4    &kp N5       &kp N6     &kp N7    &kp N8        &kp N9    &kp N0    &trans
&trans  &kp SQT   &kp MINUS  &kp PLUS  &kp FSLH  &kp NUBS     &trans     &trans    &trans        &trans    &trans    &trans
                             &trans    &trans    &trans       &trans     &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_CLR  &win_bt 0  &mac_bt 1  &mac_bt 2  &win_bt 3    &trans  &trans  &trans  &trans  &to 4    &trans
&trans  &kp F1      &kp F2     &kp F3     &kp F4     &kp F4       &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp F11     &trans     &trans     &trans     &trans       &trans  &trans  &trans  &trans  &kp F12  &trans
                               &trans     &trans     &trans       &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp Q        &kp W        &kp E         &kp R            &kp T             &kp Y      &kp U         &kp I         &kp O            &kp P           &trans
&trans  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F     &kp G             &kp H      &hmr RSHFT J  &hmr RCTRL K  &hmr LEFT_ALT L  &hmr LGUI SEMI  &trans
&trans  &kp Z        &kp X        &kp C         &kp V            &kp B             &kp N      &kp M         &kp COMMA     &kp DOT          &kp FSLH        &trans
                                  &caps_word    &sm LCTRL ENTER  &sm LGUI SPACE    &lt 5 TAB  &mo 6         &bspc_del
            >;
        };

        layer_5 {
            bindings = <
&trans  &kp EXCL  &kp DQT    &kp SQT   &kp EQUAL        &kp UNDER    &kp GRAVE  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
&trans  &kp LBRC  &kp LPAR   &kp RPAR  &kp RIGHT_BRACE  &kp STAR     &kp COLON  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &kp LBKT  &kp MINUS  &kp PLUS  &kp RBKT         &kp AMPS     &kp TILDE  &kp PIPE  &kp COMMA  &kp DOT    &kp BSLH   &trans
                             &trans    &trans           &trans       &trans     &trans    &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &kp EXCL  &kp DQT    &kp NUHS  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &kp N1    &kp N2     &kp N3    &kp N4      &kp N5         &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans
&trans  &kp SQT   &kp MINUS  &kp PLUS  &kp FSLH    &kp BSLH       &trans     &trans    &trans     &trans    &trans    &trans
                             &trans    &trans      &trans         &trans     &trans    &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &bt BT_CLR  &win_bt 0  &mac_bt 1  &mac_bt 2  &win_bt 3    &trans  &trans  &trans  &trans  &to 0    &trans
&trans  &kp F1      &kp F2     &kp F3     &kp F4     &kp F5       &kp F6  &kp F7  &kp F8  &kp F8  &kp F10  &trans
&trans  &kp F11     &trans     &trans     &trans     &trans       &trans  &trans  &trans  &trans  &kp F12  &trans
                               &trans     &trans     &trans       &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ctrl_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        mac_ctrl_layer {
            if-layers = <5 6>;
            then-layer = <7>;
        };
    };
};
